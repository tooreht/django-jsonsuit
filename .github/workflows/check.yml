name: check
on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * *"

jobs:
  style:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #        checkout repo and setup python
      #----------------------------------------------
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'poetry'
      - run: poetry install --only test
      #----------------------------------------------
      #             run style checks
      #----------------------------------------------
      - name: Run style checks
        run: poetry run nox -t style
  versions:
    needs: style
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #        checkout repo and setup python
      #----------------------------------------------
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'poetry'
      - run: poetry install --only test
      #----------------------------------------------
      #         prepare test versions
      #----------------------------------------------
      - name: Prepare test versions
        id: read-versions
        run: |
          py_versions=$(poetry run nox -s py_versions)
          dj_versions=$(poetry run nox -s dj_versions)
          exclude=$(poetry run nox -s gha_matrix_exclude)
          echo "py_versions=$py_versions" >> $GITHUB_OUTPUT
          echo "dj_versions=$dj_versions" >> $GITHUB_OUTPUT
          echo "exclude=$exclude" >> $GITHUB_OUTPUT
    outputs:
      py_versions: ${{ steps.read-versions.outputs.py_versions }}
      dj_versions: ${{ steps.read-versions.outputs.dj_versions }}
      exclude: ${{ steps.read-versions.outputs.exclude }}
  test:
    needs: versions
    name: test ${{ matrix.dj }} | ${{ matrix.py }} | ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - Ubuntu
          - Windows
          - MacOs
        py: ${{ fromJson(needs.versions.outputs.py_versions).values }}
        dj: ${{ fromJson(needs.versions.outputs.dj_versions).keys }}
        exclude: ${{ fromJson(needs.versions.outputs.exclude) }}
    defaults:
      run:
        shell: bash
    steps:
      #----------------------------------------------
      #        checkout repo and setup python
      #----------------------------------------------
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py }}
          cache: 'poetry'
      - run: poetry install --only test
      #----------------------------------------------
      #       run nox test session
      #----------------------------------------------
      - name: Run test session
        run: poetry run nox -s "test(py-${{ matrix.py }}-${{ matrix.dj }})"
      #----------------------------------------------
      #             upload coverage stats
      # (requires CODECOV_TOKEN in repository secrets)
      #----------------------------------------------
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          # token: ${{ secrets.CODECOV_TOKEN }}  # Only required for private repositories
          file: ./coverage.xml
          fail_ci_if_error: true
